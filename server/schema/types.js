const graphql = require("graphql");
const {
  GraphQLObjectType,
  GraphQLString,
  GraphQLFloat,
  GraphQLInt,
  GraphQLID,
  GraphQLList
} = graphql;

const ProductType = new GraphQLObjectType({
  name: "Product",
  fields: () => ({
    id: {
      type: GraphQLID,
      description: "Unique GraphQLID generated by mongoose"
    },
    title: {
      type: GraphQLString,
      description: "Title"
    },
    price: {
      type: GraphQLFloat,
      description: "Price for one unit in CAD"
    },
    inventoryCount: {
      type: GraphQLInt,
      description: "Current inventory count"
    }
  })
});

const ShoppingCartType = new GraphQLObjectType({
  name: "ShoppingCart",
  fields: () => ({
    id: {
      type: GraphQLID,
      description: "Unique GraphQLID generated by mongoose"
    },
    products: {
      type: new GraphQLList(ProductType),
      description: "Array of products stored as GraphQLID types",
      resolve(parent, args) {
        let found = [];
        parent.products.forEach(productId => {
          let res = Product.findById(productId);
          found.push(res);
        });

        return found;
      }
    },
    numberOfItems: {
      description: "Number of items currently in cart",
      type: GraphQLInt
    },
    totalPrice: {
      description: "Subtotal in CAD",
      type: GraphQLFloat
    }
  })
});

module.exports = {
  ProductType,
  ShoppingCartType
};
